import requests
from fake_useragent import UserAgent
import time
import random
import logging

class HtmlLoader:
    def __init__(self, url, proxies=None):
        self.url = url
        self.ua = UserAgent()
        self.headers = {
            "User-Agent": self.ua.random
        }
        self.proxies = proxies

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
        logging.basicConfig(
            filename="loader.log",
            level=logging.INFO,
            format="%(asctime)s [%(levelname)s] %(message)s"
        )

        if not self._check_url():
            print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: URL –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
            logging.warning(f"URL may be unreachable: {self.url}")

    def fetch(self):
        print(f"üåê –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: {self.url}")
        try:
            response = requests.get(
                self.url,
                headers=self.headers,
                proxies=self.proxies,
                timeout=10
            )

            if response.status_code == 200:
                print("‚úÖ HTML –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                logging.info(f"Success: {self.url}")
                self._anti_ban_sleep()
                return response.text
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: —Å—Ç–∞—Ç—É—Å {response.status_code}")
                logging.warning(f"Bad status {response.status_code} for {self.url}")
        except Exception as e:
            print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")
            logging.error(f"Exception: {e}")

        return None

    def _anti_ban_sleep(self):
        delay = round(random.uniform(1.5, 3.0), 2)
        print(f"üò¥ –ü–∞—É–∑–∞ {delay} —Å–µ–∫ –¥–ª—è –∞–Ω—Ç–∏–±–∞–Ω–∞...")
        time.sleep(delay)

    def _check_url(self):
        """–ü—Ä–æ—Å—Ç–∞—è HEAD-–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ URL"""
        try:
            response = requests.head(self.url, timeout=5)
            return response.status_code < 400
        except Exception:
            return False